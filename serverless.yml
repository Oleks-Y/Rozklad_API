service: rozklad-api

plugins:
  - serverless-plugin-typescript
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  serverless-offline:
    useChildProcesses : true
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - X-Amz-Date
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent

package:
  excludeDevDependencies: false

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-north-1
  memorySize: 128
  timeout: 5
  endpointType: regional

functions:
  add-subject:
    handler: app/handler.add_subject
    description: POST /subject
    events :
      - http:
          path: subject
          method: post
          cors:
            origin : '*'
            headers: ${self:custom.allowedHeaders}

  get-subject:
    handler: app/handler.get_subject
    description: GET /subject
    events :
      - http:
          path : subject/{id}
          method: get
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  update-subject:
    handler: app/handler.update_subject
    description: PUT /subject/{id}
    events :
      - http:
          path: subject/{id}
          method: put
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  getAll-subject:
    handler: app/handler.get_all
    description: GET /subject
    events:
      - http:
          path: subject
          method: get
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  remove-subject:
    handler: app/handler.remove_subject
    description: DELETE /subject
    events:
      - http:
          path : /subject/{id}
          method : delete
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  add-student :
    handler: app/handler.create_student
    description:  POST /student
    events:
      - http:
          path: student
          method: post
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  get-student:
    handler : app/handler.get_student
    description: GET /student/{id}
    events:
      - http:
          path: student/{id}
          method: get
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  getAll-student:
    handler: app/handler.getAll_students
    description: GET /student
    events:
      - http:
          path: student
          method: get
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  get-student_by_lastname:
    handler: app/handler.get_student_by_name
    description: GET /student/by_name/{name}
    events:
      - http:
          path: student/by_name/{name}
          method: get
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  update-student:
    handler: app/handler.update_student
    description: PUT /student/{id}
    events:
      - http:
          path : student/{id}
          method: put
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
  remove-student:
    handler: app/handler.remove_student
    description: DELETE /student/{id}
    events:
      - http:
          path : student/{id}
          method: delete
          cors:
            origin: '*'
            headers: ${self:custom.allowedHeaders}
